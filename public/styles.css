@keyframes animation {
	from {
		transform-origin: var(--animation-transform-origin);
		transform: matrix3d(var(--matrix3d));
	}

	/* `99%` so that transform origin resets in the end */
	99% {
		transform-origin: var(--animation-transform-origin);
	}
}

* {
	box-sizing: border-box;

	margin: 0;
	padding: 0;
}

:root {
	--animation-transform-origin: top left 0;
}

body {
	font-family: monospace;
	font-size: 18px;
}

video {
	position: fixed;
	inset: 0;
	z-index: -1;

	object-fit: cover;
	object-position: center;

	height: 100vh;
	width: 100vw;
	height: 100lvh;
	width: 100lvw;

	/* Fix for Safari's `transform-style: flat` not working with `position: fixed` elements */
	transform: translateZ(-999px);
}

dialog {
	--margin: 4rem;

	inset: auto 0 0 0;

	margin: var(--margin);
	padding: 2rem;
	width: calc(100% - 2 * var(--margin));
}

button {
	font: inherit;
}

/* State */

body.AR > main {
	padding: 3rem;
}

body > main > div {
	transition: transform 0.75s;
}

body:not(.ready) > main > div {
	visibility: hidden;
}

body:not(.AR) > main > div {
	padding: 2rem;
}

body.AR > main > div {
	padding: 1rem;
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
}

body.ready > main > div {
	animation-name: animation;
	animation-duration: 1s;
	animation-fill-mode: forwards;
}

/* Motion */

body.top > main > div {
	transform: perspective(500px) rotateX(15deg);
}

body.bottom > main > div {
	transform: perspective(500px) rotateX(-15deg);
}

body.left > main > div {
	transform: perspective(500px) rotateY(15deg);
}

body.right > main > div {
	transform: perspective(500px) rotateY(-15deg);
}
